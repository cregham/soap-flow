//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ui.SpecFlowSOAP {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/soapapi")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericFault", Namespace="http://schemas.datacontract.org/2004/07/soapapi")]
    [System.SerializableAttribute()]
    public partial class GenericFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResponseCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResponseCode {
            get {
                return this.ResponseCodeField;
            }
            set {
                if ((this.ResponseCodeField.Equals(value) != true)) {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SpecFlowSOAP.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserById", ReplyAction="http://tempuri.org/IUserService/GetUserByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ui.SpecFlowSOAP.GenericFault), Action="http://tempuri.org/IUserService/GetUserByIdGenericFaultFault", Name="GenericFault", Namespace="http://schemas.datacontract.org/2004/07/soapapi")]
        ui.SpecFlowSOAP.User GetUserById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserById", ReplyAction="http://tempuri.org/IUserService/GetUserByIdResponse")]
        System.Threading.Tasks.Task<ui.SpecFlowSOAP.User> GetUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByName", ReplyAction="http://tempuri.org/IUserService/GetUserByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ui.SpecFlowSOAP.GenericFault), Action="http://tempuri.org/IUserService/GetUserByNameGenericFaultFault", Name="GenericFault", Namespace="http://schemas.datacontract.org/2004/07/soapapi")]
        ui.SpecFlowSOAP.User GetUserByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByName", ReplyAction="http://tempuri.org/IUserService/GetUserByNameResponse")]
        System.Threading.Tasks.Task<ui.SpecFlowSOAP.User> GetUserByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsers", ReplyAction="http://tempuri.org/IUserService/GetUsersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ui.SpecFlowSOAP.GenericFault), Action="http://tempuri.org/IUserService/GetUsersGenericFaultFault", Name="GenericFault", Namespace="http://schemas.datacontract.org/2004/07/soapapi")]
        ui.SpecFlowSOAP.User[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsers", ReplyAction="http://tempuri.org/IUserService/GetUsersResponse")]
        System.Threading.Tasks.Task<ui.SpecFlowSOAP.User[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUser", ReplyAction="http://tempuri.org/IUserService/AddUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ui.SpecFlowSOAP.GenericFault), Action="http://tempuri.org/IUserService/AddUserGenericFaultFault", Name="GenericFault", Namespace="http://schemas.datacontract.org/2004/07/soapapi")]
        void AddUser(ui.SpecFlowSOAP.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUser", ReplyAction="http://tempuri.org/IUserService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(ui.SpecFlowSOAP.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RemoveUser", ReplyAction="http://tempuri.org/IUserService/RemoveUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ui.SpecFlowSOAP.GenericFault), Action="http://tempuri.org/IUserService/RemoveUserGenericFaultFault", Name="GenericFault", Namespace="http://schemas.datacontract.org/2004/07/soapapi")]
        void RemoveUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/RemoveUser", ReplyAction="http://tempuri.org/IUserService/RemoveUserResponse")]
        System.Threading.Tasks.Task RemoveUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SetName", ReplyAction="http://tempuri.org/IUserService/SetNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ui.SpecFlowSOAP.GenericFault), Action="http://tempuri.org/IUserService/SetNameGenericFaultFault", Name="GenericFault", Namespace="http://schemas.datacontract.org/2004/07/soapapi")]
        void SetName(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SetName", ReplyAction="http://tempuri.org/IUserService/SetNameResponse")]
        System.Threading.Tasks.Task SetNameAsync(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SetAge", ReplyAction="http://tempuri.org/IUserService/SetAgeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ui.SpecFlowSOAP.GenericFault), Action="http://tempuri.org/IUserService/SetAgeGenericFaultFault", Name="GenericFault", Namespace="http://schemas.datacontract.org/2004/07/soapapi")]
        void SetAge(int id, int age);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SetAge", ReplyAction="http://tempuri.org/IUserService/SetAgeResponse")]
        System.Threading.Tasks.Task SetAgeAsync(int id, int age);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Ping", ReplyAction="http://tempuri.org/IUserService/PingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ui.SpecFlowSOAP.GenericFault), Action="http://tempuri.org/IUserService/PingGenericFaultFault", Name="GenericFault", Namespace="http://schemas.datacontract.org/2004/07/soapapi")]
        bool Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Ping", ReplyAction="http://tempuri.org/IUserService/PingResponse")]
        System.Threading.Tasks.Task<bool> PingAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : ui.SpecFlowSOAP.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<ui.SpecFlowSOAP.IUserService>, ui.SpecFlowSOAP.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ui.SpecFlowSOAP.User GetUserById(int id) {
            return base.Channel.GetUserById(id);
        }
        
        public System.Threading.Tasks.Task<ui.SpecFlowSOAP.User> GetUserByIdAsync(int id) {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public ui.SpecFlowSOAP.User GetUserByName(string name) {
            return base.Channel.GetUserByName(name);
        }
        
        public System.Threading.Tasks.Task<ui.SpecFlowSOAP.User> GetUserByNameAsync(string name) {
            return base.Channel.GetUserByNameAsync(name);
        }
        
        public ui.SpecFlowSOAP.User[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<ui.SpecFlowSOAP.User[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public void AddUser(ui.SpecFlowSOAP.User user) {
            base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(ui.SpecFlowSOAP.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public void RemoveUser(int id) {
            base.Channel.RemoveUser(id);
        }
        
        public System.Threading.Tasks.Task RemoveUserAsync(int id) {
            return base.Channel.RemoveUserAsync(id);
        }
        
        public void SetName(int id, string name) {
            base.Channel.SetName(id, name);
        }
        
        public System.Threading.Tasks.Task SetNameAsync(int id, string name) {
            return base.Channel.SetNameAsync(id, name);
        }
        
        public void SetAge(int id, int age) {
            base.Channel.SetAge(id, age);
        }
        
        public System.Threading.Tasks.Task SetAgeAsync(int id, int age) {
            return base.Channel.SetAgeAsync(id, age);
        }
        
        public bool Ping() {
            return base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task<bool> PingAsync() {
            return base.Channel.PingAsync();
        }
    }
}
